name: Workflow Pipeline

on:
  push:
    branches:
      - develop

jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Install dependencies
        run: pip install safety
      - name: Scan for vulnerabilities
        run: safety check



  build-and-push:
    needs: security
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

#      - name: Install Docker Compose
#        run: |
#          sudo sudo apt-get update
#          sudo apt-get install docker-compose -y

#      - name: Build and Start Services
#        run: |
#          docker-compose build
#          docker-compose up -d

      - name: Build Docker Image API
        run: docker build -t testapp-api ./TestApp.API

#      - name: Build Docker Image DB
#        run: docker build -t testapp-db ./TestApp.API/Data

      - name: Health Check
        run: |
          docker run --rm -d -p 5000:8080 --name testapp-api testapp-api
          sleep 60
          if curl -f http://localhost:5000; then
            echo "Health check passed"
          elif [ "$(curl -s -o /dev/null -w '%{http_code}' http://localhost:5000)" -eq 404 ]; then  
            echo "Health check succeeded with 404 Not Found" 
          else
            echo "Health check failed"
            exit 1
          fi
          docker stop testapp-api


#      - name: Login to Docker Hub
#        uses: docker/login-action@v3
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}

#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3

#      - name: Build and push database
#        uses: docker/build-push-action@v6
#        with:
#          file: ./TestApp.API/Data/Dockerfile
#          push: true
#          tags: ${{ secrets.DOCKER_USERNAME }}/testapp-db:develop

#      - name: Build and push api
#        uses: docker/build-push-action@v6
#        with:
#          file: ./TestApp.API/Dockerfile
#          push: true
#          tags: ${{ secrets.DOCKER_USERNAME }}/testapp-api:develop



#      - name: Build Docker Image
#        run: docker build -t testapp-db:develop ./TestApp.API/Data/Dockerfile

#      - name: Build docker image
#        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/testapp-db:develop -f TestApp.API/Data/Dockerfile testapp-db/

#      - name: Login to Docker Hub
#        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

#      - name: Docker push image
#        run: docker push ${{ secrets.DOCKER_USERNAME }}/testapp-db:develop


#      - name: Build docker image
#        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/testapp-api:develop -f TestApp.API/Dockerfile testapp-api/

#      - name: Docker push image
#        run: docker push ${{ secrets.DOCKER_USERNAME }}/testapp-api:develop